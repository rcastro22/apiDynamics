//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ServiciosDynamics.WebApi.WSRecibos {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSReceiptsGenerationSoap", Namespace="http://tempuri.org/")]
    public partial class WSReceiptsGeneration : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback generateTransReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateAdvanceReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateInvoiceReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateInvoiceAdvanceReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback obtenerExpedienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback obtenerRTUOperationCompleted;
        
        private System.Threading.SendOrPostCallback validaExisteBoletaTestOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WSReceiptsGeneration() {
            this.Url = global::ServiciosDynamics.WebApi.Properties.Settings.Default.ServiciosDynamics_WebApi_WSRecibos_WSReceiptsGeneration;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event generateTransReceiptCompletedEventHandler generateTransReceiptCompleted;
        
        /// <remarks/>
        public event generateAdvanceReceiptCompletedEventHandler generateAdvanceReceiptCompleted;
        
        /// <remarks/>
        public event generateInvoiceReceiptCompletedEventHandler generateInvoiceReceiptCompleted;
        
        /// <remarks/>
        public event generateInvoiceAdvanceReceiptCompletedEventHandler generateInvoiceAdvanceReceiptCompleted;
        
        /// <remarks/>
        public event obtenerExpedienteCompletedEventHandler obtenerExpedienteCompleted;
        
        /// <remarks/>
        public event obtenerRTUCompletedEventHandler obtenerRTUCompleted;
        
        /// <remarks/>
        public event validaExisteBoletaTestCompletedEventHandler validaExisteBoletaTestCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/generateTransReceipt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string generateTransReceipt(string _transId) {
            object[] results = this.Invoke("generateTransReceipt", new object[] {
                        _transId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateTransReceiptAsync(string _transId) {
            this.generateTransReceiptAsync(_transId, null);
        }
        
        /// <remarks/>
        public void generateTransReceiptAsync(string _transId, object userState) {
            if ((this.generateTransReceiptOperationCompleted == null)) {
                this.generateTransReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateTransReceiptOperationCompleted);
            }
            this.InvokeAsync("generateTransReceipt", new object[] {
                        _transId}, this.generateTransReceiptOperationCompleted, userState);
        }
        
        private void OngenerateTransReceiptOperationCompleted(object arg) {
            if ((this.generateTransReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateTransReceiptCompleted(this, new generateTransReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/generateAdvanceReceipt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string generateAdvanceReceipt(string _transId) {
            object[] results = this.Invoke("generateAdvanceReceipt", new object[] {
                        _transId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateAdvanceReceiptAsync(string _transId) {
            this.generateAdvanceReceiptAsync(_transId, null);
        }
        
        /// <remarks/>
        public void generateAdvanceReceiptAsync(string _transId, object userState) {
            if ((this.generateAdvanceReceiptOperationCompleted == null)) {
                this.generateAdvanceReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateAdvanceReceiptOperationCompleted);
            }
            this.InvokeAsync("generateAdvanceReceipt", new object[] {
                        _transId}, this.generateAdvanceReceiptOperationCompleted, userState);
        }
        
        private void OngenerateAdvanceReceiptOperationCompleted(object arg) {
            if ((this.generateAdvanceReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateAdvanceReceiptCompleted(this, new generateAdvanceReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/generateInvoiceReceipt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string generateInvoiceReceipt(string _journalId) {
            object[] results = this.Invoke("generateInvoiceReceipt", new object[] {
                        _journalId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateInvoiceReceiptAsync(string _journalId) {
            this.generateInvoiceReceiptAsync(_journalId, null);
        }
        
        /// <remarks/>
        public void generateInvoiceReceiptAsync(string _journalId, object userState) {
            if ((this.generateInvoiceReceiptOperationCompleted == null)) {
                this.generateInvoiceReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateInvoiceReceiptOperationCompleted);
            }
            this.InvokeAsync("generateInvoiceReceipt", new object[] {
                        _journalId}, this.generateInvoiceReceiptOperationCompleted, userState);
        }
        
        private void OngenerateInvoiceReceiptOperationCompleted(object arg) {
            if ((this.generateInvoiceReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateInvoiceReceiptCompleted(this, new generateInvoiceReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/generateInvoiceAdvanceReceipt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string generateInvoiceAdvanceReceipt(string _journalId) {
            object[] results = this.Invoke("generateInvoiceAdvanceReceipt", new object[] {
                        _journalId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void generateInvoiceAdvanceReceiptAsync(string _journalId) {
            this.generateInvoiceAdvanceReceiptAsync(_journalId, null);
        }
        
        /// <remarks/>
        public void generateInvoiceAdvanceReceiptAsync(string _journalId, object userState) {
            if ((this.generateInvoiceAdvanceReceiptOperationCompleted == null)) {
                this.generateInvoiceAdvanceReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateInvoiceAdvanceReceiptOperationCompleted);
            }
            this.InvokeAsync("generateInvoiceAdvanceReceipt", new object[] {
                        _journalId}, this.generateInvoiceAdvanceReceiptOperationCompleted, userState);
        }
        
        private void OngenerateInvoiceAdvanceReceiptOperationCompleted(object arg) {
            if ((this.generateInvoiceAdvanceReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateInvoiceAdvanceReceiptCompleted(this, new generateInvoiceAdvanceReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/obtenerExpediente", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string obtenerExpediente(string _emplId) {
            object[] results = this.Invoke("obtenerExpediente", new object[] {
                        _emplId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void obtenerExpedienteAsync(string _emplId) {
            this.obtenerExpedienteAsync(_emplId, null);
        }
        
        /// <remarks/>
        public void obtenerExpedienteAsync(string _emplId, object userState) {
            if ((this.obtenerExpedienteOperationCompleted == null)) {
                this.obtenerExpedienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobtenerExpedienteOperationCompleted);
            }
            this.InvokeAsync("obtenerExpediente", new object[] {
                        _emplId}, this.obtenerExpedienteOperationCompleted, userState);
        }
        
        private void OnobtenerExpedienteOperationCompleted(object arg) {
            if ((this.obtenerExpedienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obtenerExpedienteCompleted(this, new obtenerExpedienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/obtenerRTU", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string obtenerRTU(string _codpers) {
            object[] results = this.Invoke("obtenerRTU", new object[] {
                        _codpers});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void obtenerRTUAsync(string _codpers) {
            this.obtenerRTUAsync(_codpers, null);
        }
        
        /// <remarks/>
        public void obtenerRTUAsync(string _codpers, object userState) {
            if ((this.obtenerRTUOperationCompleted == null)) {
                this.obtenerRTUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobtenerRTUOperationCompleted);
            }
            this.InvokeAsync("obtenerRTU", new object[] {
                        _codpers}, this.obtenerRTUOperationCompleted, userState);
        }
        
        private void OnobtenerRTUOperationCompleted(object arg) {
            if ((this.obtenerRTUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obtenerRTUCompleted(this, new obtenerRTUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/validaExisteBoletaTest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool validaExisteBoletaTest(string boleta, string persona) {
            object[] results = this.Invoke("validaExisteBoletaTest", new object[] {
                        boleta,
                        persona});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void validaExisteBoletaTestAsync(string boleta, string persona) {
            this.validaExisteBoletaTestAsync(boleta, persona, null);
        }
        
        /// <remarks/>
        public void validaExisteBoletaTestAsync(string boleta, string persona, object userState) {
            if ((this.validaExisteBoletaTestOperationCompleted == null)) {
                this.validaExisteBoletaTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidaExisteBoletaTestOperationCompleted);
            }
            this.InvokeAsync("validaExisteBoletaTest", new object[] {
                        boleta,
                        persona}, this.validaExisteBoletaTestOperationCompleted, userState);
        }
        
        private void OnvalidaExisteBoletaTestOperationCompleted(object arg) {
            if ((this.validaExisteBoletaTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validaExisteBoletaTestCompleted(this, new validaExisteBoletaTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void generateTransReceiptCompletedEventHandler(object sender, generateTransReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateTransReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateTransReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void generateAdvanceReceiptCompletedEventHandler(object sender, generateAdvanceReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateAdvanceReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateAdvanceReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void generateInvoiceReceiptCompletedEventHandler(object sender, generateInvoiceReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateInvoiceReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateInvoiceReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void generateInvoiceAdvanceReceiptCompletedEventHandler(object sender, generateInvoiceAdvanceReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generateInvoiceAdvanceReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generateInvoiceAdvanceReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void obtenerExpedienteCompletedEventHandler(object sender, obtenerExpedienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obtenerExpedienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obtenerExpedienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void obtenerRTUCompletedEventHandler(object sender, obtenerRTUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obtenerRTUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obtenerRTUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void validaExisteBoletaTestCompletedEventHandler(object sender, validaExisteBoletaTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validaExisteBoletaTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validaExisteBoletaTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591